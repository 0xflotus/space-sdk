name: SDK Package Release

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version. Format: (*.*.*) e.g 0.1.0'
        required: true
jobs:
  deploy:
    name: Release Package
    runs-on: ubuntu-latest

    steps:
    - name: Get manual release Version
      id: manual_release_get_version
      run: echo ::set-output name=version::${{ github.event.inputs.version }}

    - name: Get tag release the version
      id: tag_release_get_version
      run: echo ::set-output name=version::${GITHUB_REF#refs/tags/v}

    - name: Get the version
      id: get_version
      uses: haya14busa/action-cond@v1
      with:
        cond: ${{ github.event_name == 'workflow_dispatch' }}
        if_true: ${{ steps.manual_release_get_version.outputs.version }}
        if_false: ${{ steps.tag_release_get_version.outputs.version }}

    - name: Checkout Release Tag
      uses: actions/checkout@v2
      with:
        ref: refs/tags/v${{ steps.get_version.outputs.value }}

    - name: Cache
      uses: actions/cache@v1
      with:
        path: ~/.npm # npm cache files are stored in `~/.npm` on Linux/macOS
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-
    - name: Setup
      uses: actions/setup-node@v1
      with:
        node-version: 12
        registry-url: https://registry.npmjs.org/

    - name: Install
      run: yarn install

    - name: Boostrap
      run: yarn run bootstrap

    - name: Build
      run: yarn run build

    - name: Docs
      run: yarn run build:docs

    - name: Copy Latest Docs
      run: |
        mkdir pages
        cp -r website/build/\@spacehq/sdk/* pages/
        touch pages/.nojekyll

    - name: Publish SDK
      run: 'yarn run publish:from -- --yes --no-verify-access'
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

    - name: Deploy Latest Docs
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./pages

    - name: Zip files for archiving
      run: |
        zip v${{ steps.get_version.outputs.value }}.zip dist/packages/* website/build/@spacehq/sdk/*

    - name: Upload archive to github
      uses: softprops/action-gh-release@v1
      with:
        files: 'v${{ steps.get_version.outputs.value }}.zip'
        body_path: changelogs/v${{ steps.get_version.outputs.value }}.md
        tag_name: v${{ steps.get_version.outputs.value }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
